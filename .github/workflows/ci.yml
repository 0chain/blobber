name: CI

on:
  push:
  release:
    types:
      - published
  pull_request:
    paths-ignore:
      - '**.md'

env:
  BLOBBER_REGISTRY: ${{ secrets.BLOBBER_REGISTRY }}
  VALIDATOR_REGISTRY: ${{ secrets.VALIDATOR_REGISTRY }}

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13.x
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build test environment and run tests
        run: |
          sed -i '/#expose_ci_port/c\    ports:\n      - "5432:5432"' ./docker.local/b0docker-compose.yml
          ./docker.local/bin/blobber.init.setup.sh
          docker network create --driver=bridge --subnet=198.18.0.0/15 --gateway=198.18.0.255 testnet0
          ./docker.local/bin/build.blobber.sh
          cd docker.local/blobber1
          ../bin/blobber.start_bls.sh </dev/null &>/dev/null &
          cd ../..
          make integration-tests
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=2m0s

  buf-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: setup golang
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.13.x
      - name: run buf commands
        if: success()
        run: make local

  dockerize_blobber:
    runs-on: ubuntu-20.04
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build
      run: |
        docker build -t $BLOBBER_REGISTRY:$TAG -f docker.local/Dockerfile .
        docker push $BLOBBER_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}

  dockerize_validator:
    runs-on: ubuntu-20.04
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build
      run: |
        docker build -t $VALIDATOR_REGISTRY:$TAG -f docker.local/ValidatorDockerfile .
        docker push $VALIDATOR_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}