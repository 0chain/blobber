name: CICD_TEST_HERTZNER

on:
  push:
    branches:
      - gitactionsfix

# on:
#   workflow_dispatch:
#     inputs:
#       minerImage:
#         description: 'miner image tag'
#         required: true
#         default: latest
#       sharderImage:
#         description: 'sharder image tag'
#         required: true
#         default: latest
#       blobberImage:
#         description: 'blobber image tag'
#         required: true
#         default: latest
#       validatorImage:
#         description: 'validator image tag'
#         required: true
#         default: latest

jobs:
  loadTest:
    runs-on: ubuntu-20.04
    env:
      HOST: testnet.load.testnet-0chain.net
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-helm@v1
        with:
          version: 'v3.2.2'
      - name: Setup helm repo
        run: |
          helm repo add 0chain http://0chain-helm-chart.s3-website.us-east-2.amazonaws.com/
      # - name: Setup kubeconfig
      #   run: |
      #     mkdir -p ~/.kube
      #     echo "${{ secrets.KUBECONFIG64 }}" | base64 -d > ~/.kube/config
      # - name: Uninstall old release
      #   run: |
      #     helm uninstall zerochain -n zerochain || true
      # - name: Setup chain
      #   run: |
      #     helm install zerochain -n zerochain \
      #     --set ingress.host=${HOST} \
      #     --set sharder.image.tag=${{ github.event.inputs.sharderImage }} \
      #     --set miner.image.tag=${{ github.event.inputs.minerImage }} \
      #     --set blobber.image.tag=${{ github.event.inputs.blobberImage }} \
      #     --set validator.image.tag=${{ github.event.inputs.validatorImage }} \
      #     0chain/0chain
      # - name: Check if services are up
      #   run: |
      #     printf 'Waiting for 0dns'
      #     until [[ $(curl -I --silent -o /dev/null -w %{http_code} http://${HOST}/dns/) =~ 2[0-9][0-9] ]] ;do
      #       printf '.'
      #       sleep 2
      #     done
      #     printf 'Waiting for 1st sharder'
      #     until [[ $(curl -I --silent -o /dev/null -w %{http_code} http://${HOST}/sharder0/) =~ 2[0-9][0-9] ]] ;do
      #       printf '.'
      #       sleep 2
      #     done
      #     printf 'Waiting for 1st miner'
      #     until [[ $(curl -I --silent -o /dev/null -w %{http_code} http://${HOST}/miner0/) =~ 2[0-9][0-9] ]] ;do
      #       printf '.'
      #       sleep 2
      #     done
      # - name: Build
      #   run: make build
      # - name: Test
      #   run: |
      #     make run config=loadTest-load-testnet.yaml
      # - name: Uninstall the release
      #   if: ${{ always() }}
      #   run: helm uninstall zerochain -n zerochain
