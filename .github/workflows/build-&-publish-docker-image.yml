name: "Dockerize"

concurrency:
  group: "publish-${{ github.ref }}"
  cancel-in-progress: true

on:
  push: 
    branches:
      - staging
    tags: 
      - '*'
  pull_request:

env:
  BLOBBER_REGISTRY: ${{ secrets.BLOBBER_REGISTRY }}
  VALIDATOR_REGISTRY: ${{ secrets.VALIDATOR_REGISTRY }}

jobs:
  blobber:
    runs-on: [self-hosted, build]
    steps:
      - name: Set docker image tag 
        run: |
          if [[ "${{github.ref}}" == refs/pull/* ]]; then
            tag=${GITHUB_REF/\/merge/}
            echo "TAG=$(echo pr-${tag:10})" >> $GITHUB_ENV
          else
            echo "TAG=$(echo ${GITHUB_REF#refs/*/} | sed 's/\//-/g')" >> $GITHUB_ENV
          fi

          echo "BRANCH=$([ -z '${{ github.event.pull_request.head.sha }}' ] && echo ${GITHUB_REF#refs/*/} || echo $GITHUB_HEAD_REF)" >> $GITHUB_ENV
          echo "SHA=$([ -z '${{ github.event.pull_request.head.sha }}' ] && echo $GITHUB_SHA || echo '${{ github.event.pull_request.head.sha }}')" >> $GITHUB_ENV
          
      - name: Setup go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: '1.17' # The Go version to download (if necessary) and use.

      - name: Clone blobber
        uses: actions/checkout@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build base
        run: |
          export DOCKER_IMAGE_BASE="${BLOBBER_REGISTRY}:base"
          export DOCKER_BUILD="buildx build --platform linux/amd64,linux/arm64,darwin/amd64 --push"
          ./docker.local/bin/build.base.sh

      - name: Build blobber
        run: |
          SHORT_SHA=$(echo ${{ env.SHA }} | head -c 8)
        
          export DOCKER_IMAGE_BASE="${BLOBBER_REGISTRY}:base"
          export DOCKER_IMAGE_BLOBBER="-t ${BLOBBER_REGISTRY}:$TAG -t ${BLOBBER_REGISTRY}:${TAG}-${SHORT_SHA}"
          export DOCKER_BUILD="buildx build --platform linux/amd64,linux/arm64,darwin/amd64 --push"

          ./docker.local/bin/build.blobber.sh

  validator:
    runs-on: [self-hosted, build]
    steps:
      - name: Set docker image tag 
        run: |
          if [[ "${{github.ref}}" == refs/pull/* ]]; then
            tag=${GITHUB_REF/\/merge/}
            echo "TAG=$(echo pr-${tag:10})" >> $GITHUB_ENV
          else
            echo "TAG=$(echo ${GITHUB_REF#refs/*/} | sed 's/\//-/g')" >> $GITHUB_ENV
          fi

          echo "BRANCH=$([ -z '${{ github.event.pull_request.head.sha }}' ] && echo ${GITHUB_REF#refs/*/} || echo $GITHUB_HEAD_REF)" >> $GITHUB_ENV
          echo "SHA=$([ -z '${{ github.event.pull_request.head.sha }}' ] && echo $GITHUB_SHA || echo '${{ github.event.pull_request.head.sha }}')" >> $GITHUB_ENV

      - name: Setup go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: '1.17' # The Go version to download (if necessary) and use.

      - name: Clone blobber
        uses: actions/checkout@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build base
        run: |
          export DOCKER_IMAGE_BASE="${VALIDATOR_REGISTRY}:base"
          export DOCKER_BUILD="buildx build --platform linux/amd64,linux/arm64,darwin/amd64 --push"
          ./docker.local/bin/build.base.sh

      - name: Build validator
        run: |
          SHORT_SHA=$(echo ${{ env.SHA }} | head -c 8)
        
          export DOCKER_IMAGE_BASE="${VALIDATOR_REGISTRY}:base"
          export DOCKER_IMAGE_BLOBBER="-t ${VALIDATOR_REGISTRY}:$TAG -t ${VALIDATOR_REGISTRY}:${TAG}-${SHORT_SHA}"
          export DOCKER_BUILD="buildx build --platform linux/amd64,linux/arm64,darwin/amd64 --push"
    
          ./docker.local/bin/build.validator.sh


  system-tests:
    if: github.event_name != 'workflow_dispatch'
    needs: [blobber, validator]
    runs-on: [ tests-suite ]
    steps:
      - name: "Get current PR"
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ github.token }}

      - name: "Set PR status as pending"
        uses: niteoweb/pull_request_status_action@v1.0.0
        if: steps.findPr.outputs.number
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests running with default config..."
          state: "pending"
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Setup"
        run: |
          if [[ "${{github.ref}}" == refs/pull/* ]]; then
            tag=${GITHUB_REF/\/merge/}
            echo "TAG=$(echo pr-${tag:10})" >> $GITHUB_ENV
          else
            echo "TAG=$(echo ${GITHUB_REF#refs/*/} | sed 's/\//-/g')" >> $GITHUB_ENV
          fi

          echo "BRANCH=$([ -z '${{ github.event.pull_request.head.sha }}' ] && echo ${GITHUB_REF#refs/*/} || echo $GITHUB_HEAD_REF)" >> $GITHUB_ENV
          echo "SHORT_SHA=$(([ -z '${{ github.event.pull_request.head.sha }}' ] && echo $GITHUB_SHA || echo '${{ github.event.pull_request.head.sha }}') | head -c 8)" >> $GITHUB_ENV
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

      - name: "Deploy 0Chain"
        uses: 0chain/actions/deploy-0chain@master
        with:
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          miner_image:  staging
          sharder_image: staging
          blobber_image: ${{ env.TAG }}-${{ env.SHORT_SHA }}
          validator_image: ${{ env.TAG }}-${{ env.SHORT_SHA }}
          zbox_image: staging
          zblock_image: staging
          zdns_image: staging
          explorer_image: latest
          zproxy_image: staging
          zsearch_image: staging
          blobber_stake_image: latest

      - name: "Run System tests"
        uses: 0chain/actions/run-system-tests@master
        with:
          system_tests_branch: master
          network: ${{ env.NETWORK_URL }}
          zbox_cli_branch: staging
          zwallet_cli_branch: staging
          smart_contract_owner_wallet_json: ${{ secrets.SMART_CONTRACT_OWNER_WALLET_JSON }}
          svc_account_secret: ${{ github.token }}
          deploy_report_page: false
          archive_results: true
          run_flaky_tests: false
          retry_failures: true

      - name: "Set PR status as ${{ job.status }}"
        if: ${{ (success() || failure()) && steps.findPr.outputs.number }}
        uses: niteoweb/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests with default config ${{ job.status }}"
          state: ${{ job.status }}
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
