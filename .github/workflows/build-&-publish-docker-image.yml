name: build-&-publish-docker-image

on:
  workflow_dispatch:
    inputs:
      latest_tag:
        description: 'type yes for building latest tag'
        default: 'no'
        required: true

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  BLOBBER_REGISTRY: ${{ secrets.BLOBBER_REGISTRY }}
  VALIDATOR_REGISTRY: ${{ secrets.VALIDATOR_REGISTRY }}

jobs:
  dockerize_blobber:
    runs-on: [self-hosted, build]
    steps:
    - uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=VERSION::${BRANCH}-${SHORT_SHA} 

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build blobber Docker Image
      run: |
        docker build -t $BLOBBER_REGISTRY:$TAG -f "$DOCKERFILE_BLOB" .
        docker tag $BLOBBER_REGISTRY:$TAG $BLOBBER_REGISTRY:latest
        docker tag $BLOBBER_REGISTRY:$TAG $BLOBBER_REGISTRY:staging
        docker push $BLOBBER_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}
        DOCKERFILE_BLOB: "docker.local/Dockerfile"

    - name: Push blobber Docker Image
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]] && [[ "$BRANCH" == "master" ]]; then
          docker push $BLOBBER_REGISTRY:latest
        elif [[ "$BRANCH" == "staging" ]]; then
          docker push $BLOBBER_REGISTRY:staging
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}
        BRANCH: ${{ steps.get_version.outputs.BRANCH }}

  dockerize_validator:
    runs-on: [self-hosted, build]
    steps:
    - uses: actions/checkout@v1

    - name: Get the version
      id: get_version
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=VERSION::${BRANCH}-${SHORT_SHA}    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build validator Docker Image
      run: |
        docker build -t $VALIDATOR_REGISTRY:$TAG -f "$DOCKERFILE_PROXY" .
        docker tag $VALIDATOR_REGISTRY:$TAG $VALIDATOR_REGISTRY:latest
        docker tag $VALIDATOR_REGISTRY:$TAG $VALIDATOR_REGISTRY:staging
        docker push $VALIDATOR_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}
        DOCKERFILE_PROXY: "docker.local/ValidatorDockerfile"
    
    - name: Push validator Docker Image
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]] && [[ "$BRANCH" == "master" ]]; then
          docker push $VALIDATOR_REGISTRY:latest
        elif [[ "$BRANCH" == "staging" ]]; then
          docker push $VALIDATOR_REGISTRY:staging
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}
        BRANCH: ${{ steps.get_version.outputs.BRANCH }}
