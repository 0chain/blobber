name: Dockerize

on:
  [push]
# on:
  # release:
    # types:
      # - published

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  BLOBBER_REGISTRY: ${{ secrets.BLOBBER_REGISTRY }}
  VALIDATOR_REGISTRY: ${{ secrets.VALIDATOR_REGISTRY }}

jobs:
  dockerize_blobber:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    # - name: Login to Docker Hub
      # uses: docker/login-action@v1
      # with:
        # username: ${{ secrets.DOCKERHUB_USERNAME }}
        # password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build miner
      run: |
        docker build -t $BLOBBER_REGISTRY:$TAG -f docker.local/Dockerfile .
        # docker push $BLOBBER_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}

  dockerize_validator:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    # - name: Login to Docker Hub
      # uses: docker/login-action@v1
      # with:
        # username: ${{ secrets.DOCKERHUB_USERNAME }}
        # password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build sharder
      run: |
        docker build -t $VALIDATOR_REGISTRY:$TAG -f docker.local/ValidatorDockerfile .
        # docker push $VALIDATOR_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}
