// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	context "context"

	allocation "github.com/0chain/blobber/code/go/0chain.net/blobbercore/allocation"

	mock "github.com/stretchr/testify/mock"

	readmarker "github.com/0chain/blobber/code/go/0chain.net/blobbercore/readmarker"
)

// ReadMakerI is an autogenerated mock type for the ReadMakerI type
type ReadMakerI struct {
	mock.Mock
}

// GetLatestRM provides a mock function with given fields:
func (_m *ReadMakerI) GetLatestRM() *readmarker.ReadMarker {
	ret := _m.Called()

	var r0 *readmarker.ReadMarker
	if rf, ok := ret.Get(0).(func() *readmarker.ReadMarker); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*readmarker.ReadMarker)
		}
	}

	return r0
}

// PendNumBlocks provides a mock function with given fields:
func (_m *ReadMakerI) PendNumBlocks() (int64, error) {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyMarker provides a mock function with given fields: ctx, sa
func (_m *ReadMakerI) VerifyMarker(ctx context.Context, sa *allocation.Allocation) error {
	ret := _m.Called(ctx, sa)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *allocation.Allocation) error); ok {
		r0 = rf(ctx, sa)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
